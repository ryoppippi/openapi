{
  "type": "object",
  "properties": {
    "input": {
      "type": "object",
      "properties": {
        "section_code": {
          "title": "Belonged section's {@link IShoppingSection.code}",
          "description": "Belonged section's {@link IShoppingSection.code}.",
          "type": "string"
        },
        "status": {
          "title": "Initial status of the sale",
          "description": "Initial status of the sale.\n\n`null` or `undefined`: No restriction\n`paused`: Starts with {@link ITimestamps.paused_at paused} status\n`suspended`: Starts with {@link ITimestamps.suspended_at suspended} status",
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "enum": [
                "paused",
                "suspended"
              ]
            }
          ]
        },
        "opened_at": {
          "title": "Opening time of the sale",
          "description": "Opening time of the sale.",
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the sale",
          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Description and image content describing the sale.",
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "format": {
              "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
              "type": "string",
              "enum": [
                "html",
                "md",
                "txt"
              ]
            },
            "body": {
              "type": "string"
            },
            "files": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.\n\n\n@maxLength 255",
                    "type": "string"
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "anyOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "description": "@minLength 1\n@maxLength 8"
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.\n\n\n@format uri",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "extension",
                  "url"
                ],
                "additionalProperties": false
              }
            },
            "thumbnails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.\n\n\n@maxLength 255",
                    "type": "string"
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "anyOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "description": "@minLength 1\n@maxLength 8"
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.\n\n\n@format uri",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "extension",
                  "url"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "title",
            "format",
            "body",
            "files",
            "thumbnails"
          ],
          "additionalProperties": false
        },
        "channels": {
          "title": "List of channels and categories",
          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.\n\n\n@minItems 1",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "title": "Target channel's {@link IShoppingChannel.code}",
                "description": "Target channel's {@link IShoppingChannel.code}.",
                "type": "string"
              },
              "category_codes": {
                "title": "List of target categories' {@link IShoppingChannelCategory.code}s",
                "description": "List of target categories' {@link IShoppingChannelCategory.code}s.\n\nIf empty, it means all categories of the channel is listing the sale.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "code",
              "category_codes"
            ],
            "additionalProperties": false
          }
        },
        "units": {
          "title": "List of units",
          "description": "List of units.\n\nRecords about individual product composition informations that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.\n\n\n@minItems 1",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "options": {
                "title": "List of options",
                "description": "List of options.",
                "type": "array",
                "items": {
                  "description": "Description of the current {@link IShoppingSaleUnitOption.ICreate} type:\n\n> Creation information of the option.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> option information for the unit.\n> \n> Also, `IShoppingSaleUnitOption` is an union type of two entities,\n> {@link IShoppingSaleUnitSelectableOption} and\n> {@link IShoppingSaleUnitDescriptiveOption}. To specify the detailed type of\n> them, just use the `if` statement to the {@link type} property like below:\n> \n> ```typescript\n> if (option.type === \"select\")\n>     option.candidates; // IShoppingSaleUnitSelectableOption\n> ```\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the type of option is a variable value in \"select\", the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the type is \"select\" but\n> variable is false, this is an option that has no meaning beyond simple information\n> transfer. Therefore, no matter what value the customer enters and chooses when\n> purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}.",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Discriminant for the type of selectable option",
                          "description": "Discriminant for the type of selectable option.",
                          "type": "string",
                          "enum": [
                            "select"
                          ]
                        },
                        "name": {
                          "title": "Represents the name of the option",
                          "description": "Represents the name of the option.",
                          "type": "string"
                        },
                        "variable": {
                          "title": "Whether the option is variable or not",
                          "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                          "type": "boolean"
                        },
                        "candidates": {
                          "title": "List of candidate values",
                          "description": "List of candidate values.\n\n\n@minItems 1",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "Represents the name of the candidate value",
                                "description": "Represents the name of the candidate value.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "type",
                        "name",
                        "variable",
                        "candidates"
                      ],
                      "description": "Creation information of the selectable option.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitSelectableOption.ICreate} type:\n\n> Creation information of the selectable option.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}.",
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Type of descriptive option",
                          "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                          "type": "string",
                          "enum": [
                            "string",
                            "number",
                            "boolean"
                          ]
                        },
                        "name": {
                          "title": "Readable name of the option",
                          "description": "Readable name of the option.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "name"
                      ],
                      "description": "Creation information of the descriptive option.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitDescriptiveOption.ICreate} type:\n\n> Creation information of the descriptive option.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitDescriptiveOption} type:\n\n> Descriptive option.\n> \n> When type of the option not `\"select\"`, it means the option is descriptive\n> that requiring {@link IShoppingCustomer customers} to write some value to\n> {@link IShoppingOrder purchase}. Also, whatever customer writes about the\n> option, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n> \n> Another words, the descriptive option is just for information transfer.",
                      "additionalProperties": false
                    }
                  ]
                }
              },
              "stocks": {
                "title": "List of final stocks",
                "description": "List of final stocks.\n\n\n@minItems 1",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "title": "Representative name of the stock",
                      "description": "Representative name of the stock.",
                      "type": "string"
                    },
                    "price": {
                      "title": "Price of the stock",
                      "description": "Price of the stock.",
                      "type": "object",
                      "properties": {
                        "nominal": {
                          "title": "Nominal price",
                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.\n\n\n@minimum 0",
                          "type": "number"
                        },
                        "real": {
                          "title": "Real price to pay",
                          "description": "Real price to pay.\n\n\n@minimum 0",
                          "type": "number"
                        }
                      },
                      "required": [
                        "nominal",
                        "real"
                      ],
                      "additionalProperties": false
                    },
                    "quantity": {
                      "title": "Initial inventory quantity",
                      "description": "Initial inventory quantity.\n\n\n@minimum 1",
                      "type": "integer"
                    },
                    "choices": {
                      "title": "List of choices",
                      "description": "List of choices.\n\nWhich candidate values being chosen for each option.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "option_index": {
                            "description": "Target option's index number in\n{@link IShoppingSaleUnit.ICreate.options}.",
                            "type": "integer"
                          },
                          "candidate_index": {
                            "description": "Target candidate's index number in\n{@link IShoppingSaleUnitSelectableOption.ICreate.candidates}.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "option_index",
                          "candidate_index"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "name",
                    "price",
                    "quantity",
                    "choices"
                  ],
                  "additionalProperties": false
                }
              },
              "required": {
                "title": "Whether the unit is required or not",
                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                "type": "boolean"
              },
              "name": {
                "title": "Representative name of the unit",
                "description": "Representative name of the unit.",
                "type": "string"
              },
              "primary": {
                "title": "Whether the unit is primary or not",
                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                "type": "boolean"
              }
            },
            "required": [
              "options",
              "stocks",
              "required",
              "name",
              "primary"
            ],
            "additionalProperties": false
          }
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "section_code",
        "status",
        "opened_at",
        "closed_at",
        "content",
        "channels",
        "units",
        "tags"
      ],
      "additionalProperties": false
    }
  },
  "required": [
    "input"
  ],
  "additionalProperties": false
}